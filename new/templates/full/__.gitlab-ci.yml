stages:
  - build
  - test

build:
  stage: build
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^(qa|qa2|preview|master)$/'
      when: on_success
    - changes:
        - "**/*.go"
      when: on_success
    - when: never
  tags:
    - docker-xiaomei  # match docker runner that use xiaomei image.
  script:
    - go build

test:
  stage: test
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^(qa|qa2|preview|master)$/'
      when: on_success
    - changes:
        - "**/*.go"
        - release/img-app/config/config.yml
        - release/img-app/config/env/ci.yml
      when: on_success
    - when: never
  tags:
    - docker-xiaomei  # match docker runner that use xiaomei image.
  variables:
#   POSTGRES_PASSWORD: pass
  services:
#   - name: postgres:10 # url: postgres://postgres:pass@postgres/postgres?sslmode=disable
#   - name: redis:3.2   # url: redis://:@redis/0
  script:
#   - xiaomei psql create ci
    - GOENV=ci go test ./... -p 1 -gcflags=-l -coverprofile .test.cover
    - go tool cover -func=.test.cover | tail -n 1
  coverage: '/total:\s+\(statements\)\s+(\d+.\d+\%)/'

before_script:
  - buildDir=$(pwd); echo $buildDir
  - projectDir=$(go env GOPATH)/src/{{ .ProPath }}; echo $projectDir
  - mkdir -p $(dirname $projectDir); ln -sfT $buildDir $projectDir; cd $projectDir

