stages:
  - deploy

variables:
  GIT_CLEAN_FLAGS: none

.deploy:
  stage: deploy
  environment:
    name: $CI_COMMIT_REF_NAME
    url: https://$CI_ENVIRONMENT_NAME-{{ .Domain }}
  script:
    - npm install
    - npm run build
    - xiaomei web deploy $CI_ENVIRONMENT_NAME -Wb "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY"
  only:
    refs: [ branches ]

deploy-qa:
  extends: .deploy
  only:
    variables: [ '$CI_COMMIT_REF_NAME =~ /^(qa|qa2)$/' ]
  tags:
    - shell-xiaomei-qa  # match shell runner for qa that has xiaomei command.

deploy-preview:
  extends: .deploy
  only:
    variables: [ '$CI_COMMIT_REF_NAME == "preview"' ]
  tags:
    - shell-xiaomei-production # match shell runner for production that has xiaomei command.

deploy-production:
  extends: .deploy
  environment:
    name: production
    url: https://{{ .Domain }}
  only:
    variables: [ '$CI_COMMIT_REF_NAME == "master"' ]
  tags:
    - shell-xiaomei-production # match shell runner for production that has xiaomei command.
  when: manual
  allow_failure: false

before_script:
  - buildDir=$(pwd); echo $buildDir
  - projectDir=~/front/{{ .ProName }}; echo $projectDir
  - mkdir -p $(dirname $projectDir); ln -sfT $buildDir $projectDir; cd $projectDir

